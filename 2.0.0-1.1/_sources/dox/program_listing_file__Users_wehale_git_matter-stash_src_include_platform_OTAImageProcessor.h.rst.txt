
.. _program_listing_file__Users_wehale_git_matter-stash_src_include_platform_OTAImageProcessor.h:

Program Listing for File OTAImageProcessor.h
============================================

|exhale_lsh| :ref:`Return to documentation for file <file__Users_wehale_git_matter-stash_src_include_platform_OTAImageProcessor.h>` (``/Users/wehale/git/matter-stash/src/include/platform/OTAImageProcessor.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   /*
    *
    *    Copyright (c) 2021 Project CHIP Authors
    *    All rights reserved.
    *
    *    Licensed under the Apache License, Version 2.0 (the "License");
    *    you may not use this file except in compliance with the License.
    *    You may obtain a copy of the License at
    *
    *        http://www.apache.org/licenses/LICENSE-2.0
    *
    *    Unless required by applicable law or agreed to in writing, software
    *    distributed under the License is distributed on an "AS IS" BASIS,
    *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    *    See the License for the specific language governing permissions and
    *    limitations under the License.
    */
   
   #pragma once
   
   #include <app/data-model/Nullable.h>
   #include <lib/core/CHIPError.h>
   #include <lib/support/CodeUtils.h>
   #include <lib/support/DLLUtil.h>
   #include <lib/support/Span.h>
   
   namespace chip {
   
   struct OTAImageProgress
   {
       uint64_t downloadedBytes = 0;
       uint64_t totalFileBytes  = 0;
   };
   
   class DLL_EXPORT OTAImageProcessorInterface
   {
   public:
       virtual ~OTAImageProcessorInterface() {}
   
       virtual CHIP_ERROR PrepareDownload() = 0;
   
       virtual CHIP_ERROR Finalize() = 0;
   
       virtual CHIP_ERROR Apply() = 0;
   
       virtual CHIP_ERROR Abort() = 0;
   
       virtual CHIP_ERROR ProcessBlock(ByteSpan & block) = 0;
   
       virtual app::DataModel::Nullable<uint8_t> GetPercentComplete()
       {
           return mParams.totalFileBytes > 0
               ? app::DataModel::Nullable<uint8_t>(static_cast<uint8_t>((mParams.downloadedBytes * 100) / mParams.totalFileBytes))
               : app::DataModel::Nullable<uint8_t>{};
       }
   
       virtual uint64_t GetBytesDownloaded() { return mParams.downloadedBytes; }
   
       virtual bool IsFirstImageRun() = 0;
   
       virtual CHIP_ERROR ConfirmCurrentImage() = 0;
   
   protected:
       OTAImageProgress mParams;
   };
   
   } // namespace chip
