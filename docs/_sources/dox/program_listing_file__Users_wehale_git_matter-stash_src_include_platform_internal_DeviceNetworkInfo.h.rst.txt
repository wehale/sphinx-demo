
.. _program_listing_file__Users_wehale_git_matter-stash_src_include_platform_internal_DeviceNetworkInfo.h:

Program Listing for File DeviceNetworkInfo.h
============================================

|exhale_lsh| :ref:`Return to documentation for file <file__Users_wehale_git_matter-stash_src_include_platform_internal_DeviceNetworkInfo.h>` (``/Users/wehale/git/matter-stash/src/include/platform/internal/DeviceNetworkInfo.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   /*
    *
    *    Copyright (c) 2020 Project CHIP Authors
    *    Copyright (c) 2018 Nest Labs, Inc.
    *    All rights reserved.
    *
    *    Licensed under the Apache License, Version 2.0 (the "License");
    *    you may not use this file except in compliance with the License.
    *    You may obtain a copy of the License at
    *
    *        http://www.apache.org/licenses/LICENSE-2.0
    *
    *    Unless required by applicable law or agreed to in writing, software
    *    distributed under the License is distributed on an "AS IS" BASIS,
    *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    *    See the License for the specific language governing permissions and
    *    limitations under the License.
    */
   
   #pragma once
   
   #include <stddef.h>
   #include <stdint.h>
   
   namespace chip {
   namespace DeviceLayer {
   namespace Internal {
   
   // ---- WiFi-specific Limits ----
   constexpr size_t kMaxWiFiSSIDLength = 32;
   constexpr size_t kMaxWiFiKeyLength  = 64;
   constexpr size_t kWiFiBSSIDLength   = 6;
   
   enum
   {
       kThreadNetworkId      = 1,
       kWiFiStationNetworkId = 2,
   };
   
   enum WiFiAuthSecurityType : int8_t
   {
       kWiFiSecurityType_NotSpecified = -1,
   
       kWiFiSecurityType_None                = 1,
       kWiFiSecurityType_WEP                 = 2,
       kWiFiSecurityType_WPAPersonal         = 3,
       kWiFiSecurityType_WPA2Personal        = 4,
       kWiFiSecurityType_WPA2MixedPersonal   = 5,
       kWiFiSecurityType_WPAEnterprise       = 6,
       kWiFiSecurityType_WPA2Enterprise      = 7,
       kWiFiSecurityType_WPA2MixedEnterprise = 8,
       kWiFiSecurityType_WPA3Personal        = 9,
       kWiFiSecurityType_WPA3MixedPersonal   = 10,
       kWiFiSecurityType_WPA3Enterprise      = 11,
       kWiFiSecurityType_WPA3MixedEnterprise = 12,
   };
   
   class DeviceNetworkInfo
   {
   public:
       uint32_t NetworkId; 
       struct
       {
           bool NetworkId : 1;           
           bool ThreadExtendedPANId : 1; 
           bool ThreadMeshPrefix : 1;    
           bool ThreadPSKc : 1;          
       } FieldPresent;
   
       // ---- WiFi-specific Fields ----
       char WiFiSSID[kMaxWiFiSSIDLength + 1]; 
       uint8_t WiFiKey[kMaxWiFiKeyLength];    
       uint8_t WiFiKeyLen;                    
       WiFiAuthSecurityType WiFiSecurityType; 
   };
   
   } // namespace Internal
   } // namespace DeviceLayer
   } // namespace chip
