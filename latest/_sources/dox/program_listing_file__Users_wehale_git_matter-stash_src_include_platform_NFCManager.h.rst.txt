
.. _program_listing_file__Users_wehale_git_matter-stash_src_include_platform_NFCManager.h:

Program Listing for File NFCManager.h
=====================================

|exhale_lsh| :ref:`Return to documentation for file <file__Users_wehale_git_matter-stash_src_include_platform_NFCManager.h>` (``/Users/wehale/git/matter-stash/src/include/platform/NFCManager.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   /*
    *
    *    Copyright (c) 2021 Project CHIP Authors
    *
    *    Licensed under the Apache License, Version 2.0 (the "License");
    *    you may not use this file except in compliance with the License.
    *    You may obtain a copy of the License at
    *
    *        http://www.apache.org/licenses/LICENSE-2.0
    *
    *    Unless required by applicable law or agreed to in writing, software
    *    distributed under the License is distributed on an "AS IS" BASIS,
    *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    *    See the License for the specific language governing permissions and
    *    limitations under the License.
    */
   
   #pragma once
   
   #include <lib/core/CHIPError.h>
   
   #include <cstddef>
   
   namespace chip {
   namespace DeviceLayer {
   
   class NFCManagerImpl;
   
   class NFCManager
   {
   public:
       CHIP_ERROR Init();
   
       CHIP_ERROR StartTagEmulation(const char * payload, size_t payloadLength);
   
       CHIP_ERROR StopTagEmulation();
   
       bool IsTagEmulationStarted() const;
   
   protected:
       // Construction/destruction limited to subclasses.
       NFCManager()  = default;
       ~NFCManager() = default;
   
       // No copy, move or assignment.
       NFCManager(const NFCManager &) = delete;
       NFCManager(NFCManager &&)      = delete;
       void operator=(const NFCManager &) = delete;
   
       // NFCManager implementation getters.
       NFCManagerImpl * Impl();
       const NFCManagerImpl * Impl() const;
   };
   
   extern NFCManager & NFCMgr();
   
   extern NFCManagerImpl & NFCMgrImpl();
   
   } // namespace DeviceLayer
   } // namespace chip
   
   #ifdef EXTERNAL_NFCMANAGERIMPL_HEADER
   #include EXTERNAL_NFCMANAGERIMPL_HEADER
   #elif defined(CHIP_DEVICE_LAYER_TARGET)
   #define NFCMANAGERIMPL_HEADER <platform/CHIP_DEVICE_LAYER_TARGET/NFCManagerImpl.h>
   #include NFCMANAGERIMPL_HEADER
   #endif // defined(CHIP_DEVICE_LAYER_TARGET)
   
   namespace chip {
   namespace DeviceLayer {
   
   inline CHIP_ERROR NFCManager::Init()
   {
       return Impl()->_Init();
   }
   
   inline CHIP_ERROR NFCManager::StartTagEmulation(const char * payload, size_t payloadLength)
   {
       return Impl()->_StartTagEmulation(payload, payloadLength);
   }
   
   inline CHIP_ERROR NFCManager::StopTagEmulation()
   {
       return Impl()->_StopTagEmulation();
   }
   
   inline bool NFCManager::IsTagEmulationStarted() const
   {
       return Impl()->_IsTagEmulationStarted();
   }
   
   inline NFCManagerImpl * NFCManager::Impl()
   {
       return static_cast<NFCManagerImpl *>(this);
   }
   
   inline const NFCManagerImpl * NFCManager::Impl() const
   {
       return static_cast<const NFCManagerImpl *>(this);
   }
   
   } // namespace DeviceLayer
   } // namespace chip
